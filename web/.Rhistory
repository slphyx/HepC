~key, ~val_y,
1, "y1",
2, "y2",
4, "y3"
)
x %>%
inner_join(y, by = "key")
x %>%
left join(y, by = "key")
x %>%
left_join(y, by = "key")
x %>%
right_join(y, by = "key")
x %>%
full_join(y, by = "key")
x <- tribble(
~key, ~val_x,
1, "x1",
2, "x2",
2, "x3",
1, "x4"
)
y <- tribble(
~key, ~val_y,
1, "y1",
2, "y2"
)
left_join(x, y, by = "key")
x <- tribble(
~key, ~val_x,
1, "x1",
2, "x2",
2, "x3",
3, "x4"
)
y <- tribble(
~key, ~val_y,
1, "y1",
2, "y2",
2, "y3",
3, "y4"
)
left_join(x, y, by = "key")
flights2 %>%
left_join(weather)
flights2 %>%
left_join(planes, by = "tailnum")
flights2 %>%
left_join(planes)
flights2 %>%
left_join(airports, c("dest" = "faa"))
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point() +
coord_quickmap()
airports
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point(colour = alt) +
coord_quickmap()
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point(colour = alt) +
coord_quickmap(mapping = aes(color = alt))
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point(colour = alt) +
coord_quickmap(mapping = aes(color = lat))
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point(colour = alt) +
coord_quickmap(data = airports,mapping = aes(color = lat))
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point(colour = alt) +
coord_quickmap(mapping = aes(data = airports,color = lat))
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point(data = airports,mapping = aes(color = lat)) +
coord_quickmap()
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point(mapping = aes(color = lat)) +
coord_quickmap()
airports
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point(mapping = aes(color = alt)) +
coord_quickmap()
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point(mapping = aes(color = name)) +
coord_quickmap()
base::merge()
top_dest <- flights %>%
count(dest, sort = TRUE) %>%
head(10)
top_dest
flights %>%
filter(dest %in% top_dest$dest)
flights %>%
semi_join(top_dest)
flights %>%
anti_join(planes, by = "tailnum") %>%
count(tailnum, sort = TRUE)
airports %>% count(alt, lon) %>% filter(n > 1)
df1 <- tribble(
~x, ~y,
1,  1,
2,  1
)
df2 <- tribble(
~x, ~y,
1,  1,
1,  2
)
intersect(df1, df2)
union(df1, df2)
setdiff(df1, df2)
setdiff(df2, df1)
anti_join(flights, airports, by = c("dest" = "faa"))
anti_join(airports, flights, by = c("faa" = "dest"))
airports
anti_join(flights, airports, by = c("dest" = "faa"))
flights
anime <- read_csv("anime.csv")
anime_rating <-read.csv("rating.csv")
anime <- read_csv("anime.csv")
anime_rating <-read.csv("rating.csv")
library("tidyverse", lib.loc="~/R/win-library/3.5")
anime <- read_csv("anime.csv")
detach("package:readr", unload=TRUE)
library("readr", lib.loc="~/R/win-library/3.5")
anime <- read_csv("anime.csv")
library("readr", lib.loc="~/R/win-library/3.5")
library("tidyverse", lib.loc="~/R/win-library/3.5")
anime <- read_csv("anime.csv")
anime_rating <-read.csv("rating.csv")
View(anime)
View(anime_rating)
anime_name <- select(anime,anime_id,anime_name)
anime_name <- select(anime,anime_id,name)
anime_rating %>%
inner_join(anime_name, by = "name")
anime_rating %>%
inner_join(anime_name, by = "anime_id")
T <- anime_rating %>%
inner_join(anime_name, by = "anime_id") %>% select(-anime_id)
View(`T`)
t %>% group_by(user_id)
t %>% group_by(t,user_id)
anime %>% group_by(user_id)
anime %>% group_by(anime_id)
anime_rating %>% group_by(user_id)
anime_rating %>% group_by(user_id) %>% count()
anime_rating %>% group_by(user_id) %>% count(rating)
anime_rating %>% group_by(user_id) %>% count(user_id)
anime_rating %>% filter(rating > 0)
anime_rating_p %>% filter(rating > 0)
anime_rating2 <-anime_rating %>% filter(rating > 0)
library(tidyverse)
library(stringr)
string1 <- "This is a string"
string2 <- 'If I want to include a "quote" inside a string, I use single quotes'
double_quote <- "\"" # or '"'
single_quote <- '\'' # or "'"
double()
double_quote
single_quote
double_quote <- "\"" # or '"'
single_quote <- '\'' # or "'"
double_quote
single_quote
double_quote <- "\""
single_quote <- '\''
double_quote <- "\""
single_quote <- '\''
single_quote <- '\''
double_quote <- "\""
single_quote <- '\''
single_quote <- '\''
double_quote <- "\""
x <- c("\"", "\\")
x
writeLines(x)
x <- "\u00b5"
x
str_c("x", "y")
str_c("x", "y", sep = ", ")
str_c("x", "y", sep = "/")
x <- c("abc", NA)
str_c("|-", x, "-|")
x <- c("abc", NA)
str_c(x)
str_c("|-", str_replace_na(x), "-|")
#> [1] "|-abc-|" "|-NA-|"
str_c("prefix-", c("a", "b", "c"), "-suffix")
str_c("x-", c("a", "b", "c"), "-y")
str_c("x-", c(1, "b", "c"), "-y")
str_c(c("x", "y", "z"), collapse = ", ")
str_c(c("x", "y", "z"), sep = ", ")
str_c(c("x", "y", "z"),c("x", "y", "z"), sep = ", ")
x <- c("Apple", "Banana", "Pear")
str_sub(x, 1, 1) <- str_to_lower(str_sub(x, 1, 1))
x
str_sub(x, 1, 1) <- str_to_upper(str_sub(x, 1, 1))
x
x %>% str_sub( 1, 1 %>% str_to_upper(str_sub( 1, 1)
s
x %>% str_sub( 1, 1 %>% str_to_upper(str_sub( 1, 1))
s
x %>% str_sub( 1, 1 )%>% str_to_upper(str_sub( 1, 1))
x %>% str_to_upper(str_sub( 1, 1))
string1 <- "This is a string"
string2 <- 'If I want to include a "quote" inside a string, I use single quotes'
paste(string1)
paste0(string1)
paste0(string2)
paste0(string1)
paste(string2)
x
paste(x)
paste0(x)
paste0(x,collapse = "")
paste0(x,collapse = " ")
paste(x,collapse = " ")
paste(x,collapse = "")
paste(x,collapse = " ")
paste("name",u)
paste("name","U")
paste0("name","U")
paste("name",NA)
paste0("name",NA)
h <- "hello"
tr_length(h)
str_length(h)
str_sub(h)
str_sub(h,3)
str_sub(h,1)
str_sub(h,-4)
str_sub(h,-1)
str_sub(h,4)
str_sub(h,2)
str_sub(h,1,4)
str_wrap(à¹‰)
str_wrap(h)
str_wrap(x)
str_wrap(x,width = 3)
str_wrap(x,width = 1)
str_wrap(h,width = 1)
str_wrap(h,width = 0)
str_wrap(x,width = 0)
thanks_path <- file.path(R.home("doc"), "THANKS")
thanks <- str_c(readLines(thanks_path), collapse = "\n")
thanks <- word(thanks, 1, 3, fixed("\n\n"))
cat(str_wrap(thanks), "\n")
cat(str_wrap(thanks, width = 40), "\n")
cat(str_wrap(thanks, width = 60, indent = 2), "\n")
cat(str_wrap(thanks, width = 60, exdent = 2), "\n")
cat(str_wrap(thanks, width = 0, exdent = 2), "\n")
cat(str_wrap(thanks), "\n")
cat(str_wrap(thanks, width = 40), "\n")
cat(str_wrap(thanks, width = 60, indent = 2), "\n")
cat(str_wrap(thanks, width = 60, exdent = 2), "\n")
cat(str_wrap(thanks, width = 80, exdent = 2), "\n")
cat(str_wrap(thanks, width = 80, indent = 2), "\n")
cat(str_wrap(thanks, width = 0, exdent = 2), "\n")
cat(str_wrap(thanks, width = 0, indent = 2), "\n")
str_trim()
str_trim(x)
str_trim("  String with trailing and leading white space\t")
str_trim("\n\nString with trailing and leading white space\n\n")
"  String with trailing and leading white space\t"
str_squish("  String with trailing,  middle, and leading white space\t")
x <- c("apple", "banana", "pear")
str_view(x, "an")
str_view(x, ".a.")
str_view(c("abc", "a.c", "bef"), "a\\.c")
x <- "a\\b"
writeLines(x)
#> a\b
str_view(x, "\\\\")
x <- "a\\b"
writeLines(x)
#> a\b
str_view(x, "\")
k
j
hg
2
\
\
\
\\\
\
\\\\
21\
_
x <- "a\\b"
writeLines(x)
#> a\b
str_view(x, "\\\\")
str_view(x, "\")
\\\\
str_view(x, "\")
str_view(x, "\\")
str_view(x, "\\")
str_view(x, "\\\\")
str_view(x, "\\\")
\
str_view(x, "\")
y < ""'\"
\
\
\
"\"
"'\
y < "\"\'\\"
y <- "\"\'\\"
writeLines(y)
str_view(y, "\"")
str_view(y, "\'")
str_view(y, "\\")
str_view(y, "\\\\")
\..\..\..
"\..\..\.."
"\\..\\..\\.."
z <- "\\..\\..\\.."
writeLines(z)
str_view(z, "\\\\")
str_view(z, "\\\\.")
str_view(z, "\\\\..")
str_view(z, "\\\\..\\\\")
x <- c("apple pie", "apple", "apple cake")
str_view(x, "apple")
str_view(x, "^apple$")
str_view(x, "$^$")
str_view(x, "$^a$")
str_view(x, "^a$")
str_view(x, "$^$a")
"$^$"
str_view($^$, "$")
str_view("$^$", "$")
str_view("$^$", "\\\\$")
str_view("$^$", "$^$")
str_view("$^$", "\u0024")
"\u0024"
str_view("$^$", "\u005E")
str_view("$^$", "\"$\"")
"\"$\""
""$""
"/"$""
"/"$/""
"\""
"\"$\""
writeLines("\"$\"")
stringr::words
detach("package:stringr", unload=TRUE)
library("stringr", lib.loc="~/R/win-library/3.5")
stringr::words
str_view(c("abc", "a.c", "a*c", "a c"), "a[.]c")
x <- c("apple", "banana", "pear")
str_detect(x, "e")
sum(str_detect(words, "^t"))
words
has_flickered <- str_subset(sentences, "flickered")
library("stringi", lib.loc="~/R/win-library/3.5")
library("stringr", lib.loc="~/R/win-library/3.5")
has_flickered <- str_subset(sentences, "flickered")
has_flickered
str_view(fruit, "(..)\\1", match = TRUE)
str_view(fruit, "(..)", match = TRUE)
str_view(fruit, "^ ", match = TRUE)
str_view(fruit, " $", match = TRUE)
str_view(fruit, "(.)\1\1", match = TRUE)
str_view(fruit, "(..)\\1", match = TRUE)
str_view(fruit, "(..)\1", match = TRUE)
str_view(words, "(..)\1", match = TRUE)
str_extract_all(sentences,"ing")
matches
str_extract_all(sentences,"ing|")
str_extract_all(sentences,"^ing|")
str_extract_all(sentences,"ing$|")
str_extract_all(sentences,"[ing]|")
str_extract_all(sentences,"[^ing]|")
str_extract_all(sentences,"^[^ing]|")
str_extract_all(sentences,"^[ing]|")
str_extract_all(sentences,"[ing]$|")
str_extract_all(sentences,"[^ing$]|")
strsplit(sentences)
strsplit(sentences," ")
strsplit(sentences," ")[1]
strsplit(sentences," ")[,1]
strsplit(sentences," ")[1,1]
strsplit(sentences," ")[,[1]]
strsplit(sentences," ")[1]
x <- strsplit(sentences," ")
View(x)
class(x)
x[1]
x[1,1]
x[1][1]
x[1][2]
x[1]
class(x[1])
class(x[1][1])
x[1]
x[1][1]
x[1][1][1]
x[1][1][1][1]
x[1][1][1][2]
data.frame(x)
y = list(n, s, b, 3)
n = c(2, 3, 5)
s = c("aa", "bb", "cc", "dd", "ee")
b = c(TRUE, FALSE, TRUE, FALSE, FALSE)
y = list(n, s, b, 3)   # x contains copies of n, s, b
y
x[c(2, 4)]
Y[c(2, 4)]
y[c(2, 4)]
x[[1]][1]
x[[]][1]
x[[,]][1]
x[[c(1:720)]][1]
x[[c(1,720)]][1]
x[[c(1,2)]][1]
x[[c(1,3)]][1]
x[[1:2]][1]
x[[1:720]][1]
x[[1:719]][1]
View(x)
x[[713]]
x[[713]][1]
x[c(5,7,9)]
x[c(5,7,9)][1]
x[c(5,7,9)][[1]]
x[c(5,7,9)][[1]][1]
matrix(unlist(x))
matrix(unlist(x)), ncol = 10, byrow = TRUE)
matrix(unlist(x), ncol = 10, byrow = TRUE))
matrix(unlist(x), ncol = 10, byrow = TRUE)
dw <- data.frame(matrix(unlist(x), nrow=132, byrow=T))
View(dw)
dw <- data.frame(matrix(unlist(x), nrow=720, byrow=T))
dw <- data.frame(matrix(unlist(x), nrow=720))
View(dw)
dw <- data.frame(matrix(unlist(x), nrow=720,ncol = 10))
View(dw)
dw <- data.frame(matrix(unlist(x), nrow=720,ncol = 10, byrow = TRUE))
length(sentences)
sentences
sentences  %>%
str_extract("([^ ]+)")
View(x)
sentences  %>%
str_extract("([^ ]+)",, simplify = TRUE)
sentences  %>%
str_extract("([^ ]+)", simplify = TRUE)
sentences  %>%
str_extract_all("([^ ]+)")
sentences  %>%
str_extract("([^ ]+)")
tibble(sentence = sentences) %>%
tidyr::extract(
sentence, c("article", "noun"), "(a|the) ([^ ]+)",
remove = FALSE
)
library("tidyr", lib.loc="~/R/win-library/3.5")
tibble(sentence = sentences) %>%
tidyr::extract(
sentence, c("article", "noun"), "(a|the) ([^ ]+)",
remove = FALSE
)
library("tidyverse", lib.loc="~/R/win-library/3.5")
tibble(sentence = sentences) %>%
tidyr::extract(
sentence, c("article", "noun"), "(a|the) ([^ ]+)",
remove = FALSE
)
shiny::runApp('C:/hepc/web')
runApp('C:/hepc/web')
runApp('C:/hepc/web')
runApp('C:/hepc/web')
runApp('C:/hepc/web')
runApp('C:/hepc/web')
getwd()
setwd("C:/hepc/web")
runApp()
runApp()
runApp()
runApp()
